cmake_minimum_required(VERSION 2.8.11)
project(estimate_normals)

set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel." FORCE)
set(EIGEN_INC "EIGEN_INC-NOTFOUND" CACHE PATH "Eigen include folder")
set(TBB_INC "TBB_INC-NOTFOUND" CACHE PATH "TBB include folder")
set(TBB_LIB "TBB_LIB-NOTFOUND" CACHE PATH "TBB library folder (i.e. contains libtbb.so)")
set(PYTHON_INC "PYTHON_INC-NOTFOUND" CACHE PATH "Python include folder (i.e. contains Python.h)")
set(PYTHON_LIB "PYTHON_LIB-NOTFOUND" CACHE PATH "Python library folder (i.e. contains libpython27.so)")
set(NUMPY_INC "NUMPY_INC-NOTFOUND" CACHE PATH "Numpy include folder (i.e. contains arrayobject.h)")
#set(NUMPY_INC "KDTREE_INC-NOTFOUND" CACHE PATH "kd-tree include folder")

macro(check_var var_name)
if (${var_name} STREQUAL "${var_name}-NOTFOUND")
	message(FATAL_ERROR "Please manually set ${var_name}.")
endif()
endmacro(check_var)

check_var(EIGEN_INC)
check_var(TBB_INC)
check_var(TBB_LIB)
check_var(PYTHON_INC)
check_var(PYTHON_LIB)
check_var(NUMPY_INC)

# if (EIGEN_INC STREQUAL "EIGEN_INC-NOTFOUND")
	# message(FATAL_ERROR "Manually set EIGEN_INC to proceed.")
# endif()
# if (TBB_INC STREQUAL "TBB_INC-NOTFOUND")
	# message(FATAL_ERROR "Manually set TBB_INC to proceed.")
# endif()
# if (TBB_LIB STREQUAL "TBB_LIB-NOTFOUND")
	# message(FATAL_ERROR "Manually set TBB_LIB to proceed.")
# endif()
# if (PYTHON_INC STREQUAL "PYTHON_INC-NOTFOUND")
	# message(FATAL_ERROR "Manually set PYTHON_INC to proceed.")
# endif()
# if (PYTHON_LIB STREQUAL "PYTHON_LIB-NOTFOUND")
	# message(FATAL_ERROR "Manually set PYTHON_LIB to proceed.")
# endif()
# if (NUMPY_INC STREQUAL "NUMPY_INC-NOTFOUND")
	# message(FATAL_ERROR "Manually set NUMPY_INC to proceed.")
# endif()

SET(KDTREE_INC F:\\Projects\\pypcl_open_source\\points\\KdTree\\src)
#SET(KDTREE_INC F:\\Sources\\pypcl\\points\\KdTree\\Code)
#SET(USEFUL_HEADERS_INC F:\\Sources\\pypcl\\points\\KdTree\\UsefulHeaders)

include(FindOpenMP)
find_library(LIB_TBB tbb PATH ${TBB_LIB})
find_library(LIB_TBBMALLOC tbbmalloc PATH ${TBB_LIB})
find_library(LIB_PYTHON python27 PATH ${PYTHON_LIB})

add_library(estimate_normals SHARED estimate_normals.cpp)
target_link_libraries(estimate_normals ${LIB_PYTHON} ${LIB_TBB} ${LIB_TBBMALLOC})
set_target_properties(estimate_normals PROPERTIES COMPILE_FLAGS ${OpenMP_CXX_FLAGS})
#set_target_properties(estimate_normals PROPERTIES INCLUDE_DIRECTORIES "${EIGEN_INC};${TBB_INC};${PYTHON_INC};${NUMPY_INC};${KDTREE_INC};${USEFUL_HEADERS_INC}")
set_target_properties(estimate_normals PROPERTIES INCLUDE_DIRECTORIES "${EIGEN_INC};${TBB_INC};${PYTHON_INC};${NUMPY_INC};${KDTREE_INC}")
